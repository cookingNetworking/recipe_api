version: '3.9'

services:
  app:
    build:
      context: .
      args:
        - DEV=true
    volumes:
      - type: bind
        source: ./app
        target: /app
      - dev-static-data:/vol/web
      - ws-static:/tmp
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_STORAGE_BUCKET_NAME
      - AWS_S3_REGION_NAME
      - AWS_CLOUDFRONT_KEY_ID
      - AWS_CLOUDFRONT_KEY
      - AWS_CLOUDFRONT_DOMAIN
      - SOCIAL_AUTH_GOOGLE_OAUTH2_KEY
      - SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET
      - DEBUG=1
      - DEV_ENV
      - TZ='GMT+8'
      - PGTZ='GMT+8'
    depends_on:
      - cache
      - db
  worker:
    build:
      context: .
      args:
        - DEV=true
    command: celery -A app worker --loglevel=info --concurrency=2
    volumes:
      - dev-static-data:/vol/worker
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - DEBUG=1
      - TZ='GMT+8'
      - PGTZ='GMT+8'
    depends_on:
      - db
      - cache
  beat:
    build:
      context: .
      args:
        - DEV=true
        - SERVICE_TYPE=beat
    command: celery -A app beat -l info
    volumes:
      - dev-static-data:/vol/beat
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - DEBUG=1
      - TZ='GMT+8'
      - PGTZ='GMT+8'
    depends_on:
      - db
      - cache
  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
      - TZ='GMT+8'
      - PGTZ='GMT+8'
  cache:
    image: redis:7.2.1-alpine
    environment:
      - TZ='GMT+8'
      - PGTZ='GMT+8'
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/vol/redis
  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
      - 80:8000
      - 443:8443
    deploy:
      resources:
        limits:
          memory: 128M
    volumes:
      - dev-static-data:/vol/web/static
      - ws-static:/tmp
    environment:
      - TZ='GMT+8'
      - PGTZ='GMT+8'

volumes:
  ws-static:
  dev-db-data:
  dev-static-data:
  redis-data:


